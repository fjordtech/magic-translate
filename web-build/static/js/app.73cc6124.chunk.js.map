{"version":3,"sources":["src/assets/magic-logo.png","src/components/PaperProvider.tsx","src/services/api.ts","src/utils/storage.ts","src/services/history.ts","src/pages/Home/index.tsx","src/pages/History/index.tsx","src/routes/app.routes.tsx","App.tsx"],"names":["module","exports","theme","DefaultTheme","roundness","version","colors","primary","secondary","tertiary","PaperProvider","children","Provider","api","axios","create","baseURL","storeData","key","value","a","async","AsyncStorage","setItem","JSON","stringify","getData","getItem","parse","KEY","storeCard","newCard","cards","foundIndex","findIndex","card","name","cardsToUpdate","listCards","App","useState","text","onChangeText","printed_text","image_uris","normal","setCard","showImage","setShowImage","loading","setLoading","View","style","styles","container","imageContainer","Image","source","logo","image","TextInput","label","input","placeholder","groupButtons","Button","icon","mode","onPress","trim","get","params","q","then","data","cardFound","card_faces","frontFace","printed_name","catch","error","message","response","status","finally","marginLeft","uri","cardImage","Card","maxHeight","elevation","Content","Paragraph","StatusBar","StyleSheet","flex","padding","paddingTop","backgroundColor","alignItems","justifyContent","marginBottom","width","margin","marginTop","height","borderColor","borderWidth","borderRadius","flexDirection","History","props","modalVisible","setModalVisible","currentCard","setCurrentCard","setCards","cleanOpen","setCleanOpen","fabOpen","setFabOpen","useEffect","list","length","toggleModal","handleDeleteCard","cardToDelete","cardsUpdated","filter","deleteCard","newList","SafeAreaView","Portal","Modal","visible","onDismiss","containerCard","resizeMode","FAB","Group","open","actions","clear","onStateChange","FlatList","contentContainerStyle","showsVerticalScrollIndicator","keyExtractor","item","ListEmptyComponent","emptyContent","Ionicons","size","color","Text","emptyText","renderItem","info","paddingVertical","borderBottomWidth","borderBottomColor","marginRight","fontSize","textTransform","fontWeight","fab","position","right","bottom","textAlign","AppRoutes","index","setIndex","renderScene","BottomNavigation","SceneMap","home","Home","sceneAnimationEnabled","renderIcon","route","focused","renderLabel","title","navigationState","routes","onIndexChange"],"mappings":"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","file":"static/js/app.73cc6124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magic-logo.bbd998c7.png\";","import React from 'react';\nimport { DefaultTheme, Provider } from 'react-native-paper';\n\nconst theme = {\n    ...DefaultTheme,\n    roundness: 2,\n    version: 3,\n    colors: {\n        ...DefaultTheme.colors,\n        primary: '#3498db',\n        secondary: '#f1c40f',\n        tertiary: '#a1b2c3'\n    },\n};\n\n\nconst PaperProvider: React.FC = ({ children }) => {\n  return (\n    <Provider theme={theme}>\n        {children}\n    </Provider>    \n  )\n}\n\nexport default PaperProvider;","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://api.scryfall.com'    \n})\n\nexport default api","import AsyncStorage from '@react-native-async-storage/async-storage'\n\nexport const storeData = async (key: string, value: any) => {\n    try {\n        await AsyncStorage.setItem(key, JSON.stringify(value))\n        return true\n    } catch (error) {\n        return false\n    }\n}\n\nexport const getData = async (key: string) => {\n    try {\n        const value = await AsyncStorage.getItem(key)\n        if (value !== null) {\n            return JSON.parse(value)\n        }\n    } catch (error) {\n        return false\n    }\n}\n\nexport const clearData = async () => {\n    try {\n        await AsyncStorage.clear()\n        return true\n    }catch(error){\n        return false\n    }\n}\n","import { storeData, getData, clearData } from '@/utils/storage'\n\ninterface CardProps {\n    name: string,\n    image: string,\n    text: string,\n}\n\nconst KEY = '@MAGIC_T:cards'\n\nconst storeCard = async (newCard: CardProps) => {\n    const cards: CardProps[] = await getData(KEY)\n\n    if(cards){\n        const foundIndex = cards.findIndex(card => card.name == newCard.name)\n        let cardsToUpdate = [...cards]\n        if(foundIndex !== -1){\n            cardsToUpdate[foundIndex] = newCard\n            await storeData(KEY, cards)\n        }else {\n            await storeData(KEY, [...cards, newCard])\n        }\n    }else{\n        await storeData(KEY, [newCard])\n    }\n}\n\nconst listCards = async (): Promise<CardProps[]> => {\n    const cards = await getData(KEY)\n\n    if(cards){\n        return cards\n    }else {\n        return []\n    }\n}\n\nconst deleteCard = async (cardToDelete: CardProps) => {\n    const cards: CardProps[] = await getData(KEY)\n    const cardsUpdated = cards.filter(card => card.name !== cardToDelete.name)\n    await storeData(KEY, cardsUpdated)\n    return await listCards()\n}\n\nconst clearCardHistory = async () => {\n    return await clearData()\n}\n\nexport {\n    storeCard,\n    listCards,\n    deleteCard,\n    clearCardHistory,\n}","import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Button, TextInput, Card, Paragraph } from 'react-native-paper';\nimport { StyleSheet, Text, View, Image } from 'react-native';\n\nimport api from '@/services/api'\nimport { storeCard } from '@/services/history'\n\nimport logo from '@/assets/magic-logo.png'\n\nexport default function App() {\n  const [text, onChangeText] = useState('');\n  const [card, setCard] = useState<any>({ printed_text: '', image_uris: { normal: null } });\n  const [showImage, setShowImage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // Pacifism\n  // Crypt Ghast\n  // Duress \n\n  // Energy Flux // without translate\n  // Nissa, Vastwood Seer // with back face // current: get the first face\n\n  const toggleImage = () => {\n    if(!card.image_uris.normal) return\n    setShowImage(!showImage)\n  }\n\n  const findCard = async () => {\n    if(!text.trim() || loading) return\n\n    setLoading(true)\n    api.get('/cards/search', {\n      params: {\n        q: `${text} lang:pt`\n      }\n    })\n    .then(({ data }) => {\n      let [cardFound] = data.data;\n      if(!cardFound || !cardFound?.printed_text){\n        setCard({ printed_text: 'Carta sem tradução pt-BR.', image_uris: { normal: null } })\n        return\n      }\n\n      if(!!cardFound.card_faces){\n        // TODO: Nissa, Vastwood Seer // card with two faces\n        // get the two faces of this card (?)\n        const [frontFace] = cardFound.card_faces\n\n        if(!frontFace){\n          setCard({ printed_text: 'Algo deu errado! Tente novamente.', image_uris: { normal: null } })\n          return \n        }\n\n        cardFound = frontFace\n      }\n\n      // cardFound.card_faces\n\n      setCard(cardFound)\n      storeCard({\n        name: `${text} / ${cardFound.printed_name}`,\n        image: cardFound.image_uris.normal,\n        text: cardFound.printed_text,\n      })    \n    })\n    .catch((error) => {\n      let message = 'Algo deu errado! Tente novamente.'\n\n      if(error.response) {\n        const { status } = error.response\n  \n        if(status === 404){\n          message = 'Carta não encontrada! Tente novamente.'\n        }\n      }\n\n      setCard({ printed_text: message, image_uris: { normal: null } })\n    })\n    .finally(() => setLoading(false))\n  }\n\n  return (\n    <View style={styles.container}>\n    <View style={styles.imageContainer}>\n      <Image source={logo} style={styles.image} /> \n      <TextInput\n        label=\"Nome da Carta\"\n        style={styles.input}\n        value={text}\n        onChangeText={onChangeText}\n        placeholder=\"Digite o nome da carta...\"\n      />\n\n      <View style={styles.groupButtons}>\n        <Button icon=\"magnify\" mode=\"contained\" onPress={findCard} loading={loading}>\n          Buscar\n        </Button> \n\n        <Button style={{ marginLeft: 10 }} icon=\"image-area\" mode=\"contained\" onPress={toggleImage}>\n          { showImage ? 'Ver Texto' : 'Ver Imagem' }\n        </Button>\n      </View>\n\n    </View>\n    {showImage ? (      \n        <Image source={{ uri: card.image_uris.normal }} style={styles.cardImage}/>\n    ) : !!card.printed_text && (\n      <Card style={{ maxHeight: 200 }} elevation={3} mode='elevated'>\n        <Card.Content>\n          <Paragraph>\n            {card.printed_text}\n          </Paragraph>\n        </Card.Content>\n      </Card>\n    )}\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 40,\n    backgroundColor: '#eee',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  imageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 20,\n    width: '100%',\n    backgroundColor: '#eee',\n  },\n  input: {\n    margin: 12,\n    marginTop: 50,\n    width: '80%',\n  },\n  image: {\n    padding: 10,\n    width: '100%',\n    height: 120\n  },\n  cardImage: {\n    width: 223,\n    height: 310,\n    borderColor: '#000',\n    borderWidth: 2,\n    borderRadius: 10,\n  },\n  groupButtons: {\n    flexDirection: 'row',\n  }\n});","import React, { useEffect, useState } from 'react';\nimport { Ionicons } from '@expo/vector-icons'; \n\nimport { View, SafeAreaView, FlatList, Image, StyleSheet } from 'react-native';\n\nimport { Text, Button, Portal, Modal, Card, FAB } from 'react-native-paper';\n\nimport Provider from '@/components/PaperProvider'\nimport { listCards, deleteCard, clearCardHistory } from '@/services/history';\n\ninterface CardProps {\n    name: string,\n    image: string,\n    text: string,\n}  \n\nconst History = (props: any) => {\n  const [modalVisible, setModalVisible] = useState(false)\n  const [currentCard, setCurrentCard] = useState<CardProps>()\n  const [cards, setCards] = useState<CardProps[]>([])\n  const [cleanOpen, setCleanOpen] = useState(false)\n  const [fabOpen, setFabOpen] = useState(false)\n\n  useEffect(() => {\n    listCards()\n    .then((list) => {\n        setCards(list)\n        if(!!list.length){\n            setFabOpen(true)\n        }\n    })\n\n    return () => {\n        setCleanOpen(false)\n        setFabOpen(false)\n    }\n  }, [props])\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible)\n  }\n\n  const handleCurrentCard = (card: CardProps) => {\n    setCurrentCard(card)\n    toggleModal()\n  }\n\n  const handleDeleteCard = (card: CardProps) => {\n    deleteCard(card)\n    .then((newList) => setCards(newList))\n  }\n\n  const handleClear = async () => {\n    await clearCardHistory()\n    setCards([])\n    setFabOpen(false)\n  }\n\n  const renderEmptyState = () => (\n    <View style={styles.emptyContent}>\n        <Ionicons name=\"sad-outline\" size={42} color=\"#838383\" />\n        <Text style={styles.emptyText}>Não há histórico de tradução.</Text>    \n    </View>\n  )\n\n  return (\n    <Provider>\n        <SafeAreaView style={{ flex: 1 }}>\n            <Portal>\n                <Modal visible={modalVisible} onDismiss={toggleModal} >\n                    <Card style={styles.containerCard}>\n                        <Image source={{ uri: currentCard?.image }} style={styles.image} resizeMode='contain'/>\n                    </Card>\n                </Modal>\n\n                <FAB.Group\n                    visible={fabOpen}\n                    open={cleanOpen}\n                    icon={cleanOpen ? 'alert-outline' : 'delete'}\n                    actions={[\n                    {\n                        icon: 'check-bold',\n                        label: 'Limpar tudo',\n                        onPress: handleClear,\n                    },\n                    ]}\n                    onStateChange={({ open }) => setCleanOpen(open)}\n            />\n            </Portal>  \n\n            <FlatList\n                contentContainerStyle={styles.container}\n                showsVerticalScrollIndicator={false}\n                data={cards}\n                keyExtractor={item => item.name}\n                ListEmptyComponent={renderEmptyState()}\n                renderItem={({ item }: any) => (\n                    <View style={styles.item}>\n                        <View style={styles.info}>\n                            <Text style={styles.name}>{item.name}</Text>\n                            <Text>{item.text}</Text>\n                        </View>\n                \n                        <View>\n                            <Button style={{ marginBottom: 10 }} mode=\"contained\" onPress={() => handleCurrentCard(item)}>\n                                <Ionicons name=\"image-outline\" size={24} color=\"black\" />\n                            </Button> \n                            <Button mode=\"contained\" onPress={() => handleDeleteCard(item)}>\n                                <Ionicons name=\"trash-outline\" size={24} color=\"black\" />\n                            </Button> \n                        </View>\n                    </View>\n            )}\n            />\n        </SafeAreaView>\n    </Provider>  \n  )\n}\n\nexport default History;\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 20,\n        paddingTop: 40,\n        flex: 1,\n    },\n    containerCard: {\n        padding: 10,\n    },\n    item: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingVertical: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#838383',\n    },\n    info: {\n        flex: 1,\n        marginRight: 10,\n    },\n    name: {\n        fontSize: 18,\n        textTransform: 'capitalize',\n        fontWeight: 'bold',\n        marginBottom: 5,\n    },\n    image: {\n        width: '100%',\n        height: 500\n    },\n    fab: {\n        position: 'absolute',\n        margin: 16,\n        right: 0,\n        bottom: 0,\n    },\n    emptyText: {\n        color: '#838383',\n        textAlign: 'center',\n        fontSize: 16,\n    },\n    emptyContent: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n})","import React, { useState } from 'react';\nimport { Ionicons } from '@expo/vector-icons'; \nimport { BottomNavigation, Text } from 'react-native-paper';\n\nimport Home from '@/pages/Home'\nimport History from '@/pages/History'\n\nconst AppRoutes = () => {\n  const [index, setIndex] = useState(0);\n\n  const routes = [\n    { key: 'home', title: 'Home' },\n    { key: 'list-circle', title: 'Histórico'},\n  ];\n\n  const renderScene = BottomNavigation.SceneMap({\n    home: Home,\n    'list-circle': History,\n  });\n\n  return (\n    <BottomNavigation\n      sceneAnimationEnabled\n      renderIcon={({ route, color, focused }) => <Ionicons name={focused ? route.key : `${route.key}-outline` as any} size={24} color={color} />}\n      renderLabel={({ route }) => <Text style={{ fontSize: 12, textAlign: 'center' }}>{route.title}</Text>}\n      navigationState={{ index, routes }}\n      onIndexChange={setIndex}\n      renderScene={renderScene}\n    />\n  );\n};\n\nexport default AppRoutes;","import React from 'react'\n\nimport PaperProvider from '@/components/PaperProvider'\n\nimport Routes from './src/routes/app.routes'\n\nconst App: React.FC = () => {\n  return (\n    <PaperProvider>\n      <Routes />\n    </PaperProvider>\n  )\n}\n\nexport default App"],"sourceRoot":""}